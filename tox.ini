# --------------------( LICENSE                           )--------------------
# Copyright 2014-2019 by Alexis Pietak & Cecil Curry.
# See "LICENSE" for further details.
#
# --------------------( SYNOPSIS                          )--------------------
# Project-wide tox configuration.
#
# tox is a high-level Python-specific testing utility wrapping comparatively
# lower-level Python-specific testing frameworks (e.g., py.test, unittest2).
# Whereas the latter only exercise this project's codebase from the current
# working directory (CWD) without installing this project and hence exercising
# this project's installation, tox exercises both.
#
# Specifically, tox iteratively:
#
# 1. Creates a source-based tarball distribution of this project (e.g., via
#    "python setup.py sdist").
# 2. Installs this tarball *AND* a system-agnostic Python interpreter into one
#    isolated virtual environment for each testing configuration.
# 3. Tests this installation with the specified testing framework.
#
# --------------------( VARIABLES                         )--------------------
# tox dynamically substitutes "{"- and "}"-delimited variable names with the
# strings to which those variables expand. Supported variable names include:
#
# * "{envtmpdir}", the absolute dirname of a temporary directory specific to
#   the current virtual environment to which this project has been installed.
# * "{posargs}", the whitespace-delimited list of all command-line arguments
#   passed to the current invocation of the "tox" command.
# * "{toxinidir}", the absolute dirname of the directory containing this file
#   (e.g., the project root).

#FIXME: Augment either our top-level "conftest.py" or "betse_test/conftest.py"
#plugins with startup logic raising a fatal exception when run from within a
#virtual environment in which the top-level project package (e.g., "betse") is
#imported from a system- or user-specific installation rather than from within
#that environment. Doing so provides a useful sanity check against accidental
#situations in which py.test exercises the current working directory rather
#than the installed virtual environment.

#FIXME: Replace all prior references to "pytest" in both ".appveyor.yml" and
#".gitlab-ci.yml" with references to "tox". In the former case, doing so will
#probably also necessitate flattening our existing AppVeyor build matrix to a
#single entry. Why? Because switching from "pytest" to "tox" standardizes a
#single build matrix applicable to both local testing and *ALL* remote CI
#hosts, substantially reducing boilerplate repetition.

# ....................{ TOX                               }....................
# Metadata specific to tox itself.

[tox]

# Test matrix defined as a Bash-interpolated string, where tox implicitly
# expands "py" to "python" and delimits the subsequent two digits with a dot to
# associate each resulting test configuration with the basename of an external
# command running an externally installed Python interpreter.
#
# For example, setting "envlist = py27,py38" produces a test matrix exercising
# the externally installed "python2.7" and "python3.8" commands. See also:
#     https://tox.readthedocs.io/en/latest/config.html#generating-environments-conditional-settings
envlist = py3{5,6,7,8}

#FIXME: Override this from within CI configurations by passing the
#"----skip-missing-interpreters=false" when running the "tox" command,
#preventing CI runs from erroneously returning success on missing interpreters.

# Ignore Python interpreters *NOT* externally installed on the current system.
# By default, 
skip_missing_interpreters = true

# ....................{ PY.TEST                           }....................
# Metadata specific to the third-party "pytest" testing framework.

[testenv]
# Comma- and newline-delimited string listing the names of all PyPI-hosted
# projects required as mandatory dependencies when testing this project.
deps = pytest

# Absolute dirname of the directory to change to for the current test
# configuration, required to avoid accidental import collisions with
# uninstalled packages of the same name residing in "{toxinidir}" (e.g.,
# "betse", "betsee"). See also the following pertinent blog post,
# "Testing your python package as installed":
#     https://blog.ganssle.io/articles/2019/08/test-as-installed.html
changedir = {envtmpdir}

# Command running the current test configuration.
commands =
    python --version
    pytest --version
    pytest {posargs} {toxinidir}

# Human-readable string synopsizing the current test configuration.
description = Exercise {toxinidir} with {basepython}.
